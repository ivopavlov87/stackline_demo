{"version":3,"sources":["components/LineGraph.module.css","components/sidebar.js","util/helpers.js","components/table.js","components/overview.js","components/graph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","productData","className","src","image","alt","subtitle","title","tags","map","tag","index","key","properDate","date","style","year","split","day","month","slice","join","monthName","parseInt","Table","id","sales","saleWeek","idx","weekEnding","retailSales","wholesaleSales","unitsSold","retailerMargin","helpers","toLocaleString","Overview","brand","retailer","details","detail","reviews","review","customer","score","Graph","chartRef","React","createRef","myChartRef","this","current","getContext","Chart","type","data","labels","props","salesWeek","datasets","label","fill","borderColor","options","scales","responsive","maintainAspectRatio","xAxes","gridLines","display","drawBorder","yAxes","ticks","classes","graphContainer","ref","height","Component","App","connect","state","dispatch","Boolean","window","location","hostname","match","store","createStore","product_data","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd04a00a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"LineGraph_graphContainer__38PjS\"};","import React from 'react';\n\nconst Sidebar = ({productData}) => {\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-stick\">\n        <img\n          className=\"product-image\"\n          src={`${productData.image}`}\n          alt={`${productData.subtitle}`}\n        ></img>\n        <h2 className=\"sidebar-title\">{productData.title}</h2>\n        <h3 className=\"sidebar-subtitle\">{productData.subtitle}</h3>\n        <div className=\"tags\">\n          {productData.tags.map((tag, index) => (\n            <h5 key={index + 12000} className=\"sidebar-tag\">{tag}</h5>\n          ))}\n        </div>\n        <div className=\"display-buttons\">\n          <button className=\"btn\">OVERVIEW</button>\n          <button className=\"btn\">SALES</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;","// formats date correctly to MM-DD-YY, and adds month abbreviation if asked for, from YYYY-MM-DD\nexport const properDate = function (date, style) {\n      date = date.split(\"-\");\n      let year = date[0];\n      let day = date[2];\n      let month = date[1];\n      return style === \"number\"\n        ? [month, day, year.slice(2)].join(\"-\")\n        : [monthName(month), day, year.slice(2)].join(\"-\");\n    }\n\n// gives month name to month number\nexport const monthName = function (month) {\n      return [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ][parseInt(month - 1)];\n    }\n","import React from \"react\";\nimport * as helpers from '../util/helpers.js';\n\nconst Table = ({ productData }) => {\n  \n  function renderTableData() {\n\n    return (\n      <table id=\"sales-table\">\n        <thead>\n          <tr>\n            <th>WEEK ENDING</th>\n            <th>RETAIL SALES</th>\n            <th>WHOLESALE SALES</th>\n            <th>UNITS SOLD</th>\n            <th>RETAILER MARGIN</th>\n          </tr>\n        </thead>\n        {productData.sales.map((saleWeek, idx) => {\n          const {\n            weekEnding,\n            retailSales,\n            wholesaleSales,\n            unitsSold,\n            retailerMargin\n          } = saleWeek; //destructuring\n          return (\n            <tbody key={idx + 7000}>\n              <tr key={idx + 1000}>\n                <td>{helpers.properDate(weekEnding, \"number\")}</td>\n                <td>{\"$\" + retailSales.toLocaleString()}</td>\n                <td>{\"$\" + wholesaleSales.toLocaleString()}</td>\n                <td>{unitsSold.toLocaleString()}</td>\n                <td>{\"$\" + retailerMargin.toLocaleString()}</td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </table>\n    );\n  };\n\n  return (\n    <div id=\"sales\">\n        {renderTableData()}\n    </div>\n  )\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Overview = ({ productData }) => {\n  \n  return (\n    <div>\n      <h2>\n        {productData.title} by {productData.brand}\n      </h2>\n      <h3>{productData.subtitle}</h3>\n      <h4>Retailer: {productData.retailer}</h4>\n      <h4>Product ID: {productData.id}</h4>\n      <div className=\"details\">\n        <h4>Details:</h4>\n        <ul>{productData.details.map((detail, index) => (\n          <div key={index + 11000}>\n            <li>{detail}</li>\n          </div>\n        ))}</ul>\n      </div>\n      <div className=\"reviews\">\n        <h4>Reviews:</h4>\n        <ul>\n          {productData.reviews.map((review, index) => (\n            <div key={index + 9000}>\n              <li>Customer: {review.customer}</li>\n              <li>Score: {review.score}</li>\n              <li>Review: {review.review}</li>\n            </div>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;","import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\nimport classes from \"./LineGraph.module.css\";\nimport * as helpers from \"../util/helpers.js\";\n\nexport default class Graph extends Component {\n  chartRef = React.createRef();\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: this.props.productData.sales.map(salesWeek =>\n          helpers.properDate(salesWeek.weekEnding, \"name\")\n        ),\n        datasets: [\n          {\n            label: \"Retail Sales\",\n            data: this.props.productData.sales.map(\n              salesWeek => salesWeek.retailSales\n            ),\n            fill: false,\n            borderColor: \"blue\"\n          },\n          {\n            label: \"Wholesale Sales\",\n            data: this.props.productData.sales.map(\n              salesWeek => salesWeek.wholesaleSales\n            ),\n            fill: false,\n            borderColor: \"red\"\n          }\n        ]\n      },\n      options: {\n        //Customize chart options\n        scales: {\n          responsive: true,\n          maintainAspectRatio: false,\n          xAxes: [\n            {\n              gridLines: {\n                display: false,\n                drawBorder: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: { display: false },\n              gridLines: {\n                display: false,\n                drawBorder: false\n              }\n            }\n          ]\n        }\n      }\n    });\n  }\n  render() {\n\n    return (\n      <div className=\"graph-box\">\n        <div className={classes.graphContainer}>\n          <div className=\"graph-title\">Sales</div>\n          <canvas id=\"myChart\" ref={this.chartRef} height=\"50px\" />\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport Sidebar from './components/sidebar';\nimport Table from './components/table';\nimport Overview from './components/overview';\nimport Graph from './components/graph';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"stackline-demo\">\n        <Sidebar className=\"sidebar\" productData={this.props.productData} />\n        <div>\n          <Graph className=\"graph\" productData={this.props.productData} />\n          <Table className=\"table\" productData={this.props.productData} />\n          <div className=\"overview-block\">\n            <Overview\n              className=\"overview\"\n              productData={this.props.productData}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// giving App.js access to state\nexport default connect(\n  state => ({\n    productData: state\n  }),\n  dispatch => ({})\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport product_data from \"./product_data.json\";\n\n// population of state\nfunction productData(state = product_data[0]) {\n  // Clients is array data\n  return state;\n}\n\nconst store = createStore(productData);\n\nReactDOM.render(\n  <Provider store={store}>\n  <img className='stackline-logo' src='https://image4.owler.com/logo/stackline_owler_20170129_010716_original.png' alt='stackline-logo' />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// serviceWorker();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}